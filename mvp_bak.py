import os
from dotenv import load_dotenv
load_dotenv()

# 업비트 거래소의 API를 쉽게 사용할 수 있도록 도와주는 파이썬 라이브러리
# 상세한 pypupbit 라이브러리 사용법 링크
# github.com/sharebook-kr/pyupbit
def ai_trading():
    ####### 차트 데이터뿐만 아니라 뉴스, 공포탐욕지수 등 다양한 데이터를 입력하는 구간 #######
    # 1. 업비트 차트 데이터 가져오기(30일 데이터)
    import pyupbit
    df = pyupbit.get_ohlcv("KRW-BTC", count=30, interval="day")

    # 시가(Open), 고가(High), 저가(Low), 종가(Close), 거래량(Volume), 거래금액(Value)
    # print(df.to_json())

    ####### 투자 판단에 대한 전략과 성향을 설정하는 알고리즘 #######
    # 2. OpenAI에게 데이터 제공하고 판단받기
    from openai import OpenAI
    client = OpenAI()

    response = client.chat.completions.create(
      model="gpt-4o",
      messages=[
        {
          "role": "system",
          "content": [
            {
              "type": "text",
              "text": "You are an expert in Bitcoin investing, Tell me whether to buy, sell, or hold at the moment based on the chart data provided. Response in Json format\n\nResponse Example:\n{decision: \"buy\", \"reason\": \"some technical reason\"}\n{decision: \"sell\", \"reason\": \"some technical reason\"}\n{decision: \"hold\", \"reason\": \"some technical reason\"}"
            }
          ]
        },
        {
          "role": "user",
          "content": [
            {
              "type": "text",
              # "text": "{\"open\":{\"1745830800000\":135160000.0,\"1745917200000\":136820000.0,\"1746003600000\":136310000.0,\"1746090000000\":136148000.0,\"1746176400000\":139145000.0,\"1746262800000\":138640000.0,\"17\n46349200000\":137598000.0,\"1746435600000\":135677000.0,\"1746522000000\":134890000.0,\"1746608400000\":137351000.0,\"1746694800000\":137680000.0,\"1746781200000\":144688000.0,\"1746867600000\"\n:143726000.0,\"1746954000000\":144982000.0,\"1747040400000\":145510000.0,\"1747126800000\":144875000.0,\"1747213200000\":145965000.0,\"1747299600000\":145793000.0,\"1747386000000\":146030000.0\n,\"1747472400000\":146465000.0,\"1747558800000\":146580000.0,\"1747645200000\":150296000.0,\"1747731600000\":148700000.0,\"1747818000000\":150424000.0,\"1747904400000\":152356000.0,\"1747990800\n000\":154861000.0,\"1748077200000\":149962000.0,\"1748163600000\":150680000.0,\"1748250000000\":152133000.0,\"1748336400000\":152197000.0},\"high\":{\"1745830800000\":137558000.0,\"1745917200000\n\":137498000.0,\"1746003600000\":136873000.0,\"1746090000000\":140037000.0,\"1746176400000\":140516000.0,\"1746262800000\":138750000.0,\"1746349200000\":138082000.0,\"1746435600000\":136392000.\n0,\"1746522000000\":137800000.0,\"1746608400000\":138282000.0,\"1746694800000\":145000000.0,\"1746781200000\":146200000.0,\"1746867600000\":145315000.0,\"1746954000000\":146495000.0,\"174704040\n0000\":147300000.0,\"1747126800000\":146644000.0,\"1747213200000\":146430000.0,\"1747299600000\":146639000.0,\"1747386000000\":147117000.0,\"1747472400000\":146828000.0,\"1747558800000\":150600\n000.0,\"1747645200000\":151199000.0,\"1747731600000\":150990000.0,\"1747818000000\":153301000.0,\"1747904400000\":155323000.0,\"1747990800000\":155169000.0,\"1748077200000\":152700000.0,\"17481\n63600000\":152946000.0,\"1748250000000\":153000000.0,\"1748336400000\":153218000.0},\"low\":{\"1745830800000\":133720000.0,\"1745917200000\":135700000.0,\"1746003600000\":134138000.0,\"174609000\n0000\":136002000.0,\"1746176400000\":137799000.0,\"1746262800000\":137153000.0,\"1746349200000\":135582000.0,\"1746435600000\":132900000.0,\"1746522000000\":133061000.0,\"1746608400000\":136050\n000.0,\"1746694800000\":137402000.0,\"1746781200000\":143500000.0,\"1746867600000\":143500000.0,\"1746954000000\":144037000.0,\"1747040400000\":142532000.0,\"1747126800000\":143500000.0,\"17472\n13200000\":144249000.0,\"1747299600000\":143634000.0,\"1747386000000\":145570000.0,\"1747472400000\":145770000.0,\"1747558800000\":146555000.0,\"1747645200000\":145500000.0,\"1747731600000\":14\n7743000.0,\"1747818000000\":148810000.0,\"1747904400000\":152070000.0,\"1747990800000\":149258000.0,\"1748077200000\":149422000.0,\"1748163600000\":149916000.0,\"1748250000000\":151509000.0,\"1\n748336400000\":150001000.0},\"close\":{\"1745830800000\":136816000.0,\"1745917200000\":136310000.0,\"1746003600000\":136050000.0,\"1746090000000\":139145000.0,\"1746176400000\":138636000.0,\"174\n6262800000\":137560000.0,\"1746349200000\":135652000.0,\"1746435600000\":134890000.0,\"1746522000000\":137400000.0,\"1746608400000\":137660000.0,\"1746694800000\":144780000.0,\"1746781200000\":\n143720000.0,\"1746867600000\":144964000.0,\"1746954000000\":145510000.0,\"1747040400000\":144875000.0,\"1747126800000\":145880000.0,\"1747213200000\":145718000.0,\"1747299600000\":146026000.0,\n\"1747386000000\":146465000.0,\"1747472400000\":146555000.0,\"1747558800000\":150458000.0,\"1747645200000\":148699000.0,\"1747731600000\":150424000.0,\"1747818000000\":152356000.0,\"17479044000\n00\":154861000.0,\"1747990800000\":149878000.0,\"1748077200000\":150660000.0,\"1748163600000\":152133000.0,\"1748250000000\":152195000.0,\"1748336400000\":152600000.0},\"volume\":{\"174583080000\n0\":1697.1570741,\"1745917200000\":1253.55021462,\"1746003600000\":1221.71840726,\"1746090000000\":1709.97264494,\"1746176400000\":1368.47182698,\"1746262800000\":624.59800168,\"1746349200000\"\n:677.57783034,\"1746435600000\":1381.52834207,\"1746522000000\":1153.00089047,\"1746608400000\":1302.40326345,\"1746694800000\":3154.90070587,\"1746781200000\":2080.11567877,\"1746867600000\":\n1243.871982,\"1746954000000\":1407.7751321,\"1747040400000\":2643.29601827,\"1747126800000\":1592.07970472,\"1747213200000\":1166.66900037,\"1747299600000\":1769.20196941,\"1747386000000\":127\n6.22182233,\"1747472400000\":861.64733995,\"1747558800000\":1866.44894706,\"1747645200000\":2401.08645573,\"1747731600000\":1919.88762969,\"1747818000000\":3078.69314991,\"1747904400000\":2781\n.67594178,\"1747990800000\":3245.40940679,\"1748077200000\":1063.00688169,\"1748163600000\":975.54766995,\"1748250000000\":987.97582253,\"1748336400000\":1309.32822125},\"value\":{\"17458308000\n00\":230817894846.370513916,\"1745917200000\":171355138503.3174133301,\"1746003600000\":165972157939.2249755859,\"1746090000000\":236629055960.2180480957,\"1746176400000\":190226950549.3558\n044434,\"1746262800000\":86048039262.4141845703,\"1746349200000\":92819605415.8016662598,\"1746435600000\":185565836745.5468444824,\"1746522000000\":155575215463.6811523438,\"1746608400000\"\n:178936860435.0718078613,\"1746694800000\":445620019181.008972168,\"1746781200000\":300604179418.1245117188,\"1746867600000\":179600351414.7698364258,\"1746954000000\":204503602863.2761535\n645,\"1747040400000\":384709627704.4512939453,\"1747126800000\":231500011356.9310302734,\"1747213200000\":169844494205.070526123,\"1747299600000\":256644704012.7014770508,\"1747386000000\":1\n86864020488.8945922852,\"1747472400000\":126121874218.3320770264,\"1747558800000\":277157288271.40625,\"1747645200000\":354455857435.6369018555,\"1747731600000\":286919449540.4765014648,\"1\n747818000000\":464255347702.5485229492,\"1747904400000\":428642979380.3584594727,\"1747990800000\":493986376322.7763061523,\"1748077200000\":160626638206.7190856934,\"1748163600000\":147247390195.1774291992,\"1748250000000\":150415154588.6236877441,\"1748336400000\":198595410407.6152038574}}\n"
              "text": df.to_json()
            }
          ]
        },
        {
          "role": "assistant",
          "content": [
            {
              "type": "text",
              "text": "{\n  \"recommendation\": \"hold\",\n  \"justification\": \"The recent chart data shows an increasing trend in Bitcoin prices, with significant spikes in volume and value traded, particularly towards the latest timestamps. This positive momentum suggests potential further gains; however, due to the natural volatility in the cryptocurrency market, it's wise to hold and observe for a more confirmed breakout or trend continuation before making any impulsive buy or sell decisions.\"\n}"
            }
          ]
        }
      ],
      response_format={
        "type": "json_object"
      },
      # temperature=1,
      # max_completion_tokens=2048,
      # top_p=1,
      # frequency_penalty=0,
      # presence_penalty=0
    )

    result = response.choices[0].message.content

    import json
    result = json.loads(result)
    # print(result)
    # print(type(result))

    # .env 파일에 저장한 access key와 secret key를 가져온 다음 access key를 가져와서 간단히 로그인
    import pyupbit
    access = os.getenv("UPBIT_ACCESS_KEY")
    secret = os.getenv("UPBIT_SECRET_KEY")
    upbit = pyupbit.Upbit(access, secret)

    print("### AI Decision: ", result['decision'].upper(), "###")
    print("### Reason: ", result['reason'], "###")

    if result['decision'] == 'buy':
        # 매수
        # print(upbit.buy_market_order("KRW-BTC", 10000))
        # print(upbit.buy_market_order("KRW-BTC", upbit.get_balance("KRW")))
        my_krw = upbit.get_balance("KRW")
        # 최소 주문 가능 금액
        if my_krw*0.9995 > 5000:
            print("### Buy Order Executed ###")
            print(upbit.buy_market_order("KRW-BTC", my_krw*0.9995))# 수수료를 제외한 보유 현금 전량 매수
            print("buy:", result['reason'])
        else:
            print("### Buy Order Failed: Insufficient KRW (less than 5000 KRW) ###")
    elif result['decision'] == 'sell':
        # 매도
        # print(upbit.sell_market_order("KRW-BTC", 30))
        # 보유 코인 조회
        my_btc = upbit.get_balance("KRW-BTC")

        # 현재 매도 호가 조회
        current_price = pyupbit.get_orderbook(ticker="KRW-BTC")['orderbook_units'][0]['ask_price']
        if my_btc*current_price > 5000:
            print("### Sell Order Executed ###")
            print(upbit.sell_market_order("KRW-BTC", upbit.get_balance("KRW-BTC")))
            print("sell:", result['reason'])
        else:
            print("### Sell Order Failed: Insufficient BTC (less than 5000 BTC) ###")
    elif result['decision'] == 'hold':
        # 보유
        print("### Hold Order Executed ###")
        print("hold:", result['reason'])


# 재귀적으로 계속 실행
while True:
    import time
        # 10초마다 실행
    ####### 실행주기 #######
    time.sleep(10)
    ai_trading()